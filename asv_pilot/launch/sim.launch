<launch>

    <!-- start the pilot -->
    <node name="pilot" pkg="asv_pilot" type="asv_pilot.py" output="screen">
        <!-- set topics input and outputs -->
        <param name="topic_throttle" value="motors/throttle"/>
        <param name="simulation" value="1"/>
        <rosparam command="load" file="$(find asv_pilot)/conf/pid_sim.yaml" />
    </node>

    <!-- start the thruster sim -->
    <node name="thruster_sim" pkg="asv_pilot" type="thruster_sim.py">
        <!-- set topics input and outputs -->
        <param name="topic_force" value="forces/sim/body"/>
        <param name="topic_throttle" value="motors/throttle"/>
    </node>

    <!-- default args -->
    <arg name="verbose" default="false" />

    <!-- load the simulation config -->
    <rosparam command="load" file="$(find asv_pilot)/conf/simulation_nav.yaml"/>
    <rosparam command="load" file="$(find asv_pilot)/conf/simulation_model.yaml"/>

    <!--<param name="robot_description" command="cat $(find asv_pilot)/data/rviz_emily.urdf"/>-->

    <!-- start the navigation simulator -->
    <node name="nav_sim" pkg="vehicle_core" type="node_nav_sim.py" output="screen">
        <!-- sim_rate: publish rate of nav messages (default: 20 Hz) -->
        <param name="sim_rate" value="20"/>
        <param name="pub_rate" value="10"/>

        <param name="verbose" value="$(arg verbose)" type="bool"/>

        <!-- odometry configuration (defaults are used for single vehicle operations) -->
        <param name="topic_odom" value="nav/odometry"/>
        <param name="frame_parent" value="world"/>
        <param name="frame_odom" value="map"/>
        <param name="frame_child" value="base_link"/>
    </node>

</launch>
